{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCGA,IAAM,EAAqB,SAAS,aAAa,CAAC,kBAC5C,EAAkB,SAAS,aAAa,CAAC,eAE3C,EAAa,EAAG,SAAS,gBAAgB,CAAC,OAE9C,EAAmB,gBAAgB,CAAC,QAAS,SAAC,CAA9C,EACE,EAAU,OAAO,CAAC,SAAC,CAAnB,EACE,IAAM,EAAY,EAAI,QAAQ,CAAC,MAAM,CAC/B,EAAW,EAAI,aAAa,CAAC,iBAE/B,EAAY,IACd,EAAS,MAAM,GACf,EAAmB,QAAQ,CAAG,CAAA,GAGJ,IAAxB,EAAI,QAAQ,CAAC,MAAM,EACrB,CAAA,EAAmB,QAAQ,CAAG,CAAA,CADhC,EAII,EAAY,IACd,CAAA,EAAmB,QAAQ,CAAG,CAAA,CADhC,CAGF,EACF,GAGA,IAAM,EAAqB,SAAS,aAAa,CAAC,kBAElD,EAAmB,gBAAgB,CAAC,QAAS,SAAC,CAA9C,EACE,EAAU,OAAO,CAAC,SAAC,CAAnB,EACE,IAAM,EAAO,SAAS,aAAa,CAAC,MAC9B,EAAY,EAAI,QAAQ,CAAC,MAAM,CAC/B,EAAW,EAAI,aAAa,CAAC,iBAE/B,EAAY,IACd,EAAS,qBAAqB,CAAC,cAAe,GAC9C,EAAmB,QAAQ,CAAG,CAAA,GAG5B,EAAY,GACd,CAAA,EAAmB,QAAQ,CAAG,CAAA,CADhC,CAGF,EACF,GAGA,IAAM,EAAkB,SAAS,aAAa,CAAC,eAE/C,EAAgB,gBAAgB,CAAC,QAAS,SAAC,CAA3C,EACE,CAAS,CAAC,EAAE,CAAC,MAAM,GACnB,EAAU,KAAK,GAEX,CAAA,AAAqB,IAArB,EAAU,MAAM,EAAU,AAAqB,KAArB,EAAU,MAAM,AAAK,GACjD,CAAA,EAAgB,QAAQ,CAAG,CAAA,CAD7B,EAII,EAAU,MAAM,CAAG,IACrB,CAAA,EAAgB,QAAQ,CAAG,CAAA,CAD7B,CAGF,GAIA,EAAgB,gBAAgB,CAAC,QAAS,SAAC,CAA3C,EACM,EAAU,MAAM,CAAG,GAAK,EAAU,MAAM,CAAG,IAC7C,CAAA,EAAgB,QAAQ,CAAG,CAAA,CAD7B,EAIA,IAAM,EAAO,CAAS,CAAC,EAAU,MAAM,CAAG,EAAE,CACtC,EAAS,EAAK,SAAS,CAAC,CAAA,GAE9B,EAAK,KAAK,CAAC,GAGc,KAArB,AAFJ,CAAA,EAAa,EAAG,SAAS,gBAAgB,CAAC,MAA1C,EAEc,MAAM,EAClB,CAAA,EAAgB,QAAQ,CAAG,CAAA,CAD7B,CAGF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// removing columns\nvar removeColumnButton = document.querySelector(\".remove-column\");\nvar appendRowButton = document.querySelector(\".append-row\");\nvar tableRows = _to_consumable_array(document.querySelectorAll(\"tr\"));\nremoveColumnButton.addEventListener(\"click\", function(e) {\n    tableRows.forEach(function(row) {\n        var lengthRow = row.children.length;\n        var lastCell = row.querySelector(\"td:last-child\");\n        if (lengthRow > 2) {\n            lastCell.remove();\n            removeColumnButton.disabled = false;\n        }\n        if (row.children.length === 2) removeColumnButton.disabled = true;\n        if (lengthRow < 11) appendColumnButton.disabled = false;\n    });\n});\n// adding columns\nvar appendColumnButton = document.querySelector(\".append-column\");\nappendColumnButton.addEventListener(\"click\", function(e) {\n    tableRows.forEach(function(row) {\n        var cell = document.createElement(\"td\");\n        var lengthRow = row.children.length;\n        var lastCell = row.querySelector(\"td:last-child\");\n        if (lengthRow > 1) {\n            lastCell.insertAdjacentElement(\"beforebegin\", cell);\n            removeColumnButton.disabled = false;\n        }\n        if (lengthRow > 8) appendColumnButton.disabled = true;\n    });\n});\n// removing rows\nvar removeRowButton = document.querySelector(\".remove-row\");\nremoveRowButton.addEventListener(\"click\", function(e) {\n    tableRows[0].remove();\n    tableRows.shift();\n    if (tableRows.length === 2 || tableRows.length === 10) removeRowButton.disabled = true;\n    if (tableRows.length < 10) appendRowButton.disabled = false;\n});\n// adding rows\nappendRowButton.addEventListener(\"click\", function(e) {\n    if (tableRows.length > 1 && tableRows.length < 10) removeRowButton.disabled = false;\n    var rows = tableRows[tableRows.length - 1];\n    var newRow = rows.cloneNode(true);\n    rows.after(newRow);\n    tableRows = _to_consumable_array(document.querySelectorAll(\"tr\"));\n    if (tableRows.length === 10) appendRowButton.disabled = true;\n});\n\n//# sourceMappingURL=index.97aa5f97.js.map\n","'use strict';\n// removing columns\n\nconst removeColumnButton = document.querySelector('.remove-column');\nconst appendRowButton = document.querySelector('.append-row');\n\nlet tableRows = [...document.querySelectorAll('tr')];\n\nremoveColumnButton.addEventListener('click', (e) => {\n  tableRows.forEach((row) => {\n    const lengthRow = row.children.length;\n    const lastCell = row.querySelector('td:last-child');\n\n    if (lengthRow > 2) {\n      lastCell.remove();\n      removeColumnButton.disabled = false;\n    }\n\n    if (row.children.length === 2) {\n      removeColumnButton.disabled = true;\n    }\n\n    if (lengthRow < 11) {\n      appendColumnButton.disabled = false;\n    }\n  });\n});\n// adding columns\n\nconst appendColumnButton = document.querySelector('.append-column');\n\nappendColumnButton.addEventListener('click', (e) => {\n  tableRows.forEach((row) => {\n    const cell = document.createElement('td');\n    const lengthRow = row.children.length;\n    const lastCell = row.querySelector('td:last-child');\n\n    if (lengthRow > 1) {\n      lastCell.insertAdjacentElement('beforebegin', cell);\n      removeColumnButton.disabled = false;\n    }\n\n    if (lengthRow > 8) {\n      appendColumnButton.disabled = true;\n    }\n  });\n});\n// removing rows\n\nconst removeRowButton = document.querySelector('.remove-row');\n\nremoveRowButton.addEventListener('click', (e) => {\n  tableRows[0].remove();\n  tableRows.shift();\n\n  if (tableRows.length === 2 || tableRows.length === 10) {\n    removeRowButton.disabled = true;\n  }\n\n  if (tableRows.length < 10) {\n    appendRowButton.disabled = false;\n  }\n});\n\n// adding rows\n\nappendRowButton.addEventListener('click', (e) => {\n  if (tableRows.length > 1 && tableRows.length < 10) {\n    removeRowButton.disabled = false;\n  }\n\n  const rows = tableRows[tableRows.length - 1];\n  const newRow = rows.cloneNode(true);\n\n  rows.after(newRow);\n  tableRows = [...document.querySelectorAll('tr')];\n\n  if (tableRows.length === 10) {\n    appendRowButton.disabled = true;\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","removeColumnButton","document","querySelector","appendRowButton","tableRows","querySelectorAll","addEventListener","e","forEach","row","lengthRow","children","lastCell","remove","disabled","appendColumnButton","cell","createElement","insertAdjacentElement","removeRowButton","shift","rows","newRow","cloneNode","after"],"version":3,"file":"index.97aa5f97.js.map"}